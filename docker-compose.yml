name: helldivershangar

services:
  helldivershangar-database:
    container_name: helldivershangar-database
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
      TZ: ${TZ}
      PGTZ: ${TZ}
    volumes:
      - hh-postgres:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - ${DB_PORT}:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - helldivershangar-network

  helldivershangar-api:
    container_name: helldivershangar-api
    image: helldivershangar-api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      helldivershangar-database:
        condition: service_healthy
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - helldivershangar-network

  helldivershangar-database-backup:
    container_name: helldivershangar-database-backup
    image: prodrigestivill/postgres-backup-local
    restart: always
    volumes:
      - hh-pgbackups:/backups
    depends_on:
      - helldivershangar-database
    env_file:
      - .env
    environment:
      - POSTGRES_HOST=helldivershangar-database  # Match service name
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_EXTRA_OPTS=-Z1 --schema=public --blobs
      - SCHEDULE=@daily
      - BACKUP_ON_START=TRUE
      - BACKUP_KEEP_DAYS=7
      - BACKUP_KEEP_WEEKS=4
      - BACKUP_KEEP_MONTHS=6
      - HEALTHCHECK_PORT=8080
      - TZ=${TZ}
    networks:
      - helldivershangar-network

volumes:
  hh-postgres:
  hh-pgbackups:

networks:
  helldivershangar-network:
    driver: bridge